from aiogram import Dispatcher, F
from aiogram.types import Message
from db import add_product
from config import ADMIN_ID

# --- –°—Ç–∞—Ä—Ç –∞–¥–º—ñ–Ω–∞ ---
async def admin_start(message: Message):
    if message.from_user.id != ADMIN_ID:
        return await message.answer("‚ùå –í–∏ –Ω–µ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä.")
    await message.answer("üîß –í–∏ –≤ –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—ñ.")

# --- –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä ---
async def add_product_cmd(message: Message):
    if message.from_user.id != ADMIN_ID:
        return await message.answer("‚ùå –í–∏ –Ω–µ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä.")
    try:
        # –æ—á—ñ–∫—É—î–º–æ —Ñ–æ—Ä–º–∞—Ç: /add –ù–∞–∑–≤–∞|–û–ø–∏—Å|–¶—ñ–Ω–∞|photo_id (photo_id –º–æ–∂–Ω–∞ –∑–∞–ª–∏—à–∏—Ç–∏ –ø—É—Å—Ç–∏–º)
        parts = message.text.split("|")
        name = parts[0].replace("/add ", "").strip()
        description = parts[1].strip()
        price = float(parts[2].strip())
        photo_id = parts[3].strip() if len(parts) > 3 else None
    except Exception:
        return await message.answer("‚ùå –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç:\n`/add –ù–∞–∑–≤–∞|–û–ø–∏—Å|–¶—ñ–Ω–∞|photo_id`", parse_mode="Markdown")

    product_id = await add_product(name, description, price, photo_id)
    await message.answer(f"‚úÖ –¢–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ –∑ ID {product_id}")

# --- –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤ ---
def setup_admin_handlers(dp: Dispatcher):
    dp.message.register(admin_start, F.text == "/admin")
    dp.message.register(add_product_cmd, F.text.startswith("/add"))
