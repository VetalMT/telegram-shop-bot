from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.filters import Command
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext

from config import ADMIN_ID
from keyboards import admin_kb
from db import add_product

admin_router = Router()


# --- –°–¢–ê–ù–ò –î–õ–Ø FSM ---
class AddProduct(StatesGroup):
    name = State()
    description = State()
    price = State()
    photo = State()


# --- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —â–æ —Ü–µ –∞–¥–º—ñ–Ω ---
def is_admin(message: Message) -> bool:
    return str(message.from_user.id) == str(ADMIN_ID)


# --- –í—Ö—ñ–¥ –≤ –∞–¥–º—ñ–Ω–∫—É ---
@admin_router.message(Command("admin"))
async def admin_panel(message: Message):
    if not is_admin(message):
        await message.answer("‚õî –£ —Ç–µ–±–µ –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É!")
        return
    await message.answer("‚öôÔ∏è –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å", reply_markup=admin_kb)


# --- –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É ---
@admin_router.message(F.text == "‚ûï –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä")
async def start_add_product(message: Message, state: FSMContext):
    if not is_admin(message):
        return
    await state.set_state(AddProduct.name)
    await message.answer("–í–≤–µ–¥–∏ –Ω–∞–∑–≤—É —Ç–æ–≤–∞—Ä—É:", reply_markup=ReplyKeyboardRemove())


@admin_router.message(AddProduct.name)
async def add_name(message: Message, state: FSMContext):
    await state.update_data(name=message.text)
    await state.set_state(AddProduct.description)
    await message.answer("–¢–µ–ø–µ—Ä –≤–≤–µ–¥–∏ –æ–ø–∏—Å —Ç–æ–≤–∞—Ä—É:")


@admin_router.message(AddProduct.description)
async def add_description(message: Message, state: FSMContext):
    await state.update_data(description=message.text)
    await state.set_state(AddProduct.price)
    await message.answer("–í–≤–µ–¥–∏ —Ü—ñ–Ω—É —Ç–æ–≤–∞—Ä—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: 199.99):")


@admin_router.message(AddProduct.price)
async def add_price(message: Message, state: FSMContext):
    try:
        price = float(message.text)
    except ValueError:
        await message.answer("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏ —á–∏—Å–ª–æ.")
        return

    await state.update_data(price=price)
    await state.set_state(AddProduct.photo)
    await message.answer("–ù–∞–¥—ñ—à–ª–∏ —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä—É (–∞–±–æ –ø—Ä–æ–ø—É—Å—Ç–∏, –≤—ñ–¥–ø—Ä–∞–≤–∏–≤—à–∏ - )")


@admin_router.message(AddProduct.photo)
async def add_photo(message: Message, state: FSMContext):
    data = await state.get_data()

    name = data["name"]
    description = data["description"]
    price = data["price"]

    # –Ø–∫—â–æ —Ñ–æ—Ç–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–µ
    if message.photo:
        photo = message.photo[-1].file_id
    elif message.text == "-":
        photo = None
    else:
        await message.answer("–ù–∞–¥—ñ—à–ª–∏ —Ñ–æ—Ç–æ –∞–±–æ '-' –¥–ª—è –ø—Ä–æ–ø—É—Å–∫—É")
        return

    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ –±–∞–∑—É
    add_product(name, description, price, photo)

    await message.answer(
        f"‚úÖ –¢–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ!\n\n"
        f"üì¶ {name}\n"
        f"üí∞ {price} –≥—Ä–Ω\n"
        f"üìù {description}",
        reply_markup=admin_kb
    )
    await state.clear()
