from aiogram import Router, types
from aiogram.filters import Command
from db import add_item, delete_item, get_items

admin_router = Router()

# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –∞–¥–º—ñ–Ω–∞
@admin_router.message(Command("admin"))
async def admin_panel(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=[
            [types.KeyboardButton(text="‚ûï –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä")],
            [types.KeyboardButton(text="üóë –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–≤–∞—Ä")],
            [types.KeyboardButton(text="üì¶ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ç–æ–≤–∞—Ä–∏")]
        ],
        resize_keyboard=True
    )
    await message.answer("–ê–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å. –í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", reply_markup=keyboard)


# –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä
@admin_router.message(lambda m: m.text == "‚ûï –î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä")
async def add_item_start(message: types.Message):
    await message.answer("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Ç–∞ —Ü—ñ–Ω—É —Ç–æ–≤–∞—Ä—É —á–µ—Ä–µ–∑ –∫–æ–º—É:\n–ù–∞–ø—Ä–∏–∫–ª–∞–¥: –¢–µ–ª–µ—Ñ–æ–Ω, 5000")


@admin_router.message(lambda m: "," in m.text and m.text.count(",") == 1)
async def add_item_process(message: types.Message):
    try:
        name, price = message.text.split(",")
        add_item(name.strip(), float(price.strip()))
        await message.answer(f"‚úÖ –¢–æ–≤–∞—Ä *{name.strip()}* –¥–æ–¥–∞–Ω–æ –∑–∞ {price.strip()} –≥—Ä–Ω", parse_mode="Markdown")
    except Exception as e:
        await message.answer(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")


# –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–≤–∞—Ä
@admin_router.message(lambda m: m.text == "üóë –í–∏–¥–∞–ª–∏—Ç–∏ —Ç–æ–≤–∞—Ä")
async def delete_item_start(message: types.Message):
    await message.answer("–í–≤–µ–¥—ñ—Ç—å ID —Ç–æ–≤–∞—Ä—É –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è:")


@admin_router.message(lambda m: m.text.isdigit())
async def delete_item_process(message: types.Message):
    try:
        item_id = int(message.text)
        delete_item(item_id)
        await message.answer(f"üóë –¢–æ–≤–∞—Ä –∑ ID {item_id} –≤–∏–¥–∞–ª–µ–Ω–æ")
    except Exception as e:
        await message.answer(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")


# –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ç–æ–≤–∞—Ä–∏
@admin_router.message(lambda m: m.text == "üì¶ –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ç–æ–≤–∞—Ä–∏")
async def view_items(message: types.Message):
    items = get_items()
    if not items:
        await message.answer("üì≠ –¢–æ–≤–∞—Ä—ñ–≤ —â–µ –Ω–µ–º–∞—î")
        return

    text = "üì¶ –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤:\n\n"
    for item in items:
        text += f"ID: {item['id']} | {item['name']} ‚Äî {item['price']} –≥—Ä–Ω\n"

    await message.answer(text)