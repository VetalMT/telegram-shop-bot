from aiogram import Router, types
from aiogram.filters import Command
from db import fetch_categories, fetch_products

user_router = Router()


@user_router.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("üëã –ü—Ä–∏–≤—ñ—Ç! –í–∏–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é:", reply_markup=await categories_keyboard())


async def categories_keyboard():
    categories = await fetch_categories()
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for cat_id, name in categories:
        kb.add(types.KeyboardButton(text=f"{name} ({cat_id})"))
    return kb


@user_router.message()
async def show_products(message: types.Message):
    try:
        # —Ñ–æ—Ä–º–∞—Ç: –ù–∞–∑–≤–∞–ö–∞—Ç–µ–≥–æ—Ä—ñ—ó (id)
        cat_id = int(message.text.split("(")[-1].strip(")"))
        products = await fetch_products(cat_id)
        if not products:
            return await message.answer("‚ùå –£ —Ü—ñ–π –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –Ω–µ–º–∞—î —Ç–æ–≤–∞—Ä—ñ–≤")
        text = "üì¶ –¢–æ–≤–∞—Ä–∏:\n"
        for prod_id, name, price in products:
            text += f"‚Ä¢ {name} ‚Äî {price} –≥—Ä–Ω\n"
        await message.answer(text)
    except Exception:
        await message.answer("‚ùì –ù–µ –∑—Ä–æ–∑—É–º—ñ–≤... –í–∏–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –∑ –º–µ–Ω—é")