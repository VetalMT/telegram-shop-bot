from aiogram import Router, types
from aiogram.filters import Command, Text
from db import get_products, add_to_cart, get_cart, remove_from_cart, create_order

user_router = Router()

# –ü–µ—Ä–µ–≥–ª—è–¥ –ø—Ä–æ–¥—É–∫—Ç—ñ–≤
@user_router.message(Command("shop"))
async def show_products(message: types.Message):
    products = await get_products()
    if not products:
        await message.answer("‚ùå –ü—Ä–æ–¥—É–∫—Ç—ñ–≤ –Ω–µ–º–∞—î")
        return
    for p in products:
        text = f"{p[1]}\n{p[2]}\nüí∞ {p[3]} –≥—Ä–Ω"
        if p[4]:
            await message.answer_photo(p[4], caption=text, reply_markup=types.InlineKeyboardMarkup().add(
                types.InlineKeyboardButton("üõí –î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫", callback_data=f"add_{p[0]}")
            ))
        else:
            await message.answer(text, reply_markup=types.InlineKeyboardMarkup().add(
                types.InlineKeyboardButton("üõí –î–æ–¥–∞—Ç–∏ –≤ –∫–æ—à–∏–∫", callback_data=f"add_{p[0]}")
            ))

# –ö–æ—à–∏–∫
@user_router.message(Command("cart"))
async def show_cart(message: types.Message):
    cart = await get_cart(message.from_user.id)
    if not cart:
        await message.answer("üõí –ö–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π")
        return
    text = "üõí –í–∞—à –∫–æ—à–∏–∫:\n\n"
    for item in cart:
        text += f"{item['name']} x{item['qty']} - {item['price']} –≥—Ä–Ω\n"
    await message.answer(text)

# Inline –∫–Ω–æ–ø–∫–∏ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è/–≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑ –∫–æ—à–∏–∫–∞
@user_router.callback_query(lambda c: c.data and c.data.startswith("add_"))
async def add_to_cart_cb(callback: types.CallbackQuery):
    product_id = int(callback.data.split("_")[-1])
    await add_to_cart(callback.from_user.id, product_id)
    await callback.answer("‚úÖ –î–æ–¥–∞–Ω–æ –≤ –∫–æ—à–∏–∫")

@user_router.callback_query(lambda c: c.data and c.data.startswith("remove_"))
async def remove_from_cart_cb(callback: types.CallbackQuery):
    product_id = int(callback.data.split("_")[-1])
    await remove_from_cart(callback.from_user.id, product_id)
    await callback.answer("‚ùå –í–∏–¥–∞–ª–µ–Ω–æ –∑ –∫–æ—à–∏–∫–∞")

# –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è
@user_router.message(Command("order"))
async def create_order_cmd(message: types.Message):
    order_id = await create_order(message.from_user.id, "–¢–µ—Å—Ç", "0000000000", "–ê–¥—Ä–µ—Å–∞")
    if order_id:
        await message.answer(f"‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–æ! –ù–æ–º–µ—Ä: {order_id}")
    else:
        await message.answer("‚ùå –í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π")