import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.client.bot import DefaultBotProperties
from fastapi import FastAPI, Request

logging.basicConfig(level=logging.INFO)

BOT_TOKEN = os.environ.get("BOT_TOKEN")
WEBHOOK_URL = os.environ.get("WEBHOOK_URL")  # –ù–∞–ø—Ä–∏–∫–ª–∞–¥: https://your-app.onrender.com

bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

app = FastAPI()

# –¢–æ–≤–∞—Ä–∏ –º–∞–≥–∞–∑–∏–Ω—É
PRODUCTS = {
    "apple": {"name": "üçé –Ø–±–ª—É–∫–æ", "price": 5},
    "banana": {"name": "üçå –ë–∞–Ω–∞–Ω", "price": 3},
    "orange": {"name": "üçä –ê–ø–µ–ª—å—Å–∏–Ω", "price": 4},
}

# –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –º–µ–Ω—é
def main_menu():
    kb = InlineKeyboardMarkup(row_width=2)
    for key, product in PRODUCTS.items():
        kb.add(InlineKeyboardButton(f"{product['name']} - {product['price']} –≥—Ä–Ω", callback_data=f"buy_{key}"))
    kb.add(InlineKeyboardButton("üé´ –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ç–æ–≤–∞—Ä", callback_data="restart"))
    return kb

# –°—Ç–∞—Ä—Ç
@dp.message()
async def start(message: types.Message):
    await message.answer("–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –º–∞–≥–∞–∑–∏–Ω—É! –û–±–µ—Ä—ñ—Ç—å —Ç–æ–≤–∞—Ä:", reply_markup=main_menu())

# –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫
@dp.callback_query()
async def handle_buttons(callback: types.CallbackQuery):
    data = callback.data
    if data.startswith("buy_"):
        key = data[4:]
        product = PRODUCTS.get(key)
        if product:
            await callback.message.answer(
                f"–í–∏ –æ–±—Ä–∞–ª–∏ {product['name']} –∑–∞ {product['price']} –≥—Ä–Ω.\n–î—è–∫—É—î–º–æ –∑–∞ –ø–æ–∫—É–ø–∫—É! ‚úÖ"
            )
        await callback.answer()
    elif data == "restart":
        await callback.message.answer("–û–±–µ—Ä—ñ—Ç—å —Ç–æ–≤–∞—Ä –∑–Ω–æ–≤—É:", reply_markup=main_menu())
        await callback.answer()

# Webhook endpoint
@app.post(f"/webhook/{BOT_TOKEN}")
async def webhook(request: Request):
    body = await request.json()
    update = types.Update(**body)
    await dp.process_update(update)
    return {"ok": True}

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è Webhook –Ω–∞ —Å—Ç–∞—Ä—Ç—ñ
@app.on_event("startup")
async def on_startup():
    await bot.delete_webhook()
    webhook_url = f"{WEBHOOK_URL}/webhook/{BOT_TOKEN}"
    await bot.set_webhook(webhook_url)
    logging.info(f"Webhook –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ {webhook_url}")

# –ó–∞–∫—Ä–∏—Ç—Ç—è —Å–µ—Å—ñ—ó –±–æ—Ç–∞
@app.on_event("shutdown")
async def on_shutdown():
    await bot.session.close()
