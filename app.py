import logging
import os

from aiogram import Bot, Dispatcher
from aiohttp import web

from db import init_db
from handlers_admin import setup_admin_handlers
from handlers_user import user_router

# üîß –õ–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)

# üîë –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise ValueError("‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–æ BOT_TOKEN –≤ –∑–º—ñ–Ω–Ω–∏—Ö –æ—Ç–æ—á–µ–Ω–Ω—è!")

# üåç URL —Ç–≤–æ–≥–æ –¥–æ–¥–∞—Ç–∫—É (Render –Ω–∞–¥–∞—î https://...)
RENDER_URL = os.getenv("RENDER_EXTERNAL_URL")
if not RENDER_URL:
    raise ValueError("‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–æ RENDER_EXTERNAL_URL!")
WEBHOOK_URL = f"{RENDER_URL}/webhook"

# ================== –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–æ—Ç–∞ ==================
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# ================== –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤ ==================
setup_admin_handlers(dp)          # –∞–¥–º—ñ–Ω-–ø–∞–Ω–µ–ª—å
dp.include_router(user_router)    # –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ (–∫–∞—Ç–∞–ª–æ–≥/–∫–æ—à–∏–∫/–∑–∞–º–æ–≤–ª–µ–Ω–Ω—è)

# ================== Webhook ==================
async def handle_webhook(request: web.Request):
    update = await request.json()
    await dp.feed_webhook_update(bot, update)
    return web.Response()

async def on_startup(app: web.Application):
    # 1) –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ë–î (—Å—Ç–≤–æ—Ä–∏—Ç—å —Ç–∞–±–ª–∏—Ü—ñ, —è–∫—â–æ —ó—Ö –Ω–µ–º–∞—î)
    await init_db()
    logging.info("üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–∏—Ö —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞")

    # 2) –°—Ç–∞–≤–∏–º–æ –≤–µ–±—Ö—É–∫
    await bot.set_webhook(WEBHOOK_URL)
    logging.info(f"‚úÖ Webhook –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {WEBHOOK_URL}")

async def on_shutdown(app: web.Application):
    logging.info("‚ö†Ô∏è –ë–æ—Ç –∑—É–ø–∏–Ω—è—î—Ç—å—Å—è...")
    await bot.session.close()

# ================== –ó–∞–ø—É—Å–∫ ==================
def main():
    app = web.Application()
    app.router.add_post("/webhook", handle_webhook)

    app.on_startup.append(on_startup)
    app.on_shutdown.append(on_shutdown)

    web.run_app(app, host="0.0.0.0", port=int(os.getenv("PORT", 10000)))

if __name__ == "__main__":
    main()
