import os
from aiohttp import web
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import Message
from config import BOT_TOKEN, ADMIN_ID, WEBHOOK_URL

# --- –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ —Ç–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ ---
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# --- –ö–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ ---
from keyboards import shop_kb, admin_kb

# --- –°—Ç–∞—Ä—Ç–æ–≤–∞ –∫–æ–º–∞–Ω–¥–∞ ---
@dp.message(Command("start"))
async def cmd_start(message: Message):
    if str(message.from_user.id) == str(ADMIN_ID):
        await message.answer("üëã –ü—Ä–∏–≤—ñ—Ç, –∞–¥–º—ñ–Ω! –û—Å—å –≤–∞—à–∞ –ø–∞–Ω–µ–ª—å.", reply_markup=admin_kb)
    else:
        await message.answer("üëã –ü—Ä–∏–≤—ñ—Ç! –õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –º–∞–≥–∞–∑–∏–Ω—É.", reply_markup=shop_kb)

# --- –û–±—Ä–æ–±–∫–∞ –≤–µ–±—Ö—É–∫–∞ ---
async def handle_webhook(request):
    try:
        data = await request.json()
        update = types.Update(**data)
        await dp.feed_update(bot, update)
    except Exception as e:
        print("–ü–æ–º–∏–ª–∫–∞ –≤–µ–±—Ö—É–∫–∞:", e)
    return web.Response(text="ok")

# --- –°—Ç–∞—Ä—Ç–∞–ø —Ç–∞ —à–∞–¥—É–Ω ---
async def on_startup(app):
    await bot.set_webhook(WEBHOOK_URL)
    print(f"Webhook –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ {WEBHOOK_URL}")

async def on_shutdown(app):
    await bot.session.close()
    print("–ë–æ—Ç –∑–∞–≤–µ—Ä—à–∏–≤ —Ä–æ–±–æ—Ç—É.")

# --- –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è ---
def main():
    app = web.Application()
    app.router.add_post("/webhook", handle_webhook)
    app.on_startup.append(on_startup)
    app.on_shutdown.append(on_shutdown)
    web.run_app(app, host="0.0.0.0", port=int(os.getenv("PORT", 8080)))

if __name__ == "__main__":
    main()
