import os
import logging
from aiohttp import web
from aiogram import Bot, Dispatcher, F
from aiogram.types import Update
from aiogram.client.bot import DefaultBotProperties
from db import init_db, get_products, add_product, delete_product, add_to_cart, get_cart, create_order

API_TOKEN = os.getenv("API_TOKEN")
if not API_TOKEN:
    raise ValueError("‚ùå –ù–µ –≤–∫–∞–∑–∞–Ω–æ API_TOKEN –≤ –∑–º—ñ–Ω–Ω–∏—Ö –æ—Ç–æ—á–µ–Ω–Ω—è!")

# --- –õ–æ–≥—É–≤–∞–Ω–Ω—è ---
logging.basicConfig(level=logging.INFO)

# --- –ë–æ—Ç —ñ –¥–∏—Å–ø–µ—Ç—á–µ—Ä ---
bot = Bot(token=API_TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

# --- –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–∞–∑–∏ ---
async def on_startup():
    await init_db()
    logging.info("‚úÖ DB initialized")

# --- –ü—Ä–æ—Å—Ç–∏–π —Ö–µ–Ω–¥–ª–µ—Ä —Å—Ç–∞—Ä—Ç—É ---
@dp.message(F.text == "/start")
async def cmd_start(message):
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –¶–µ –º–∞–≥–∞–∑–∏–Ω –±–æ—Ç–∞. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –º–µ–Ω—é –¥–ª—è –Ω–∞–≤—ñ–≥–∞—Ü—ñ—ó.")

# --- –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –ø—Ä–æ–¥—É–∫—Ç—ñ–≤ ---
@dp.message(F.text == "üõçÔ∏è –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ç–æ–≤–∞—Ä–∏")
async def show_products(message):
    products = await get_products()
    if not products:
        await message.answer("–¢–æ–≤–∞—Ä–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ.")
        return
    text = "\n".join([f"{p[1]} ‚Äî {p[3]} –≥—Ä–Ω" for p in products])
    await message.answer(f"–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤:\n{text}")

# --- Webhook handler –¥–ª—è Render ---
async def handle(request: web.Request):
    try:
        update = Update(**await request.json())
        await dp.feed_update(bot, update)
    except Exception as e:
        logging.exception(e)
    return web.Response(text="OK")

# --- –ó–∞–ø—É—Å–∫ aiohttp —Å–µ—Ä–≤–µ—Ä—É ---
if __name__ == "__main__":
    port = int(os.getenv("PORT", 10000))  # Render –¥–∞—î PORT
    app = web.Application()
    app.router.add_post(f"/webhook/{API_TOKEN}", handle)
    app.on_startup.append(lambda app: on_startup())
    logging.info(f"üöÄ Running on 0.0.0.0:{port}")
    web.run_app(app, host="0.0.0.0", port=port)
