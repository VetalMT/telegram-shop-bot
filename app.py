# app.py
from fastapi import FastAPI, Request
from aiogram import Bot, Dispatcher, types
import logging
import os

# –õ–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = os.getenv("BOT_TOKEN")  # –∞–±–æ –≤—Å—Ç–∞–≤ —Å–≤—ñ–π —Ç–æ–∫–µ–Ω –ø—Ä—è–º–æ

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ —Ç–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è FastAPI
app = FastAPI()

# --- –ü—Ä–∏–∫–ª–∞–¥ —Ö–µ–Ω–¥–ª–µ—Ä—ñ–≤ ---
@dp.message(commands=["start"])
async def start_handler(message: types.Message):
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ webhook üöÄ")

# --- Webhook endpoint ---
@app.post("/webhook/{token}")
async def telegram_webhook(token: str, request: Request):
    if token != BOT_TOKEN:
        return {"status": "unauthorized"}

    update_data = await request.json()
    update = types.Update(**update_data)  # –∫–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ dict —É Update

    try:
        # feed_update —Ç–µ–ø–µ—Ä –ø–æ—Ç—Ä–µ–±—É—î bot —ñ update
        await dp.feed_update(bot=bot, update=update)
    except Exception as e:
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ webhook: {e}")

    return {"ok": True}

# --- –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –ª–æ–∫–∞–ª—å–Ω–æ–º—É —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—ñ ---
if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=10000)
